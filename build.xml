<project name="ZimbraAdminExt" default="deploy-all">

    <import file="../ant-global.xml"/>

    <import file="../ZimbraCustomerServices/hosted/YahooSmb/ZimbraAdminExt/build.xml" optional="true" />
    <property file="build.properties"/>
    <property environment="env"/>
	
	<!-- set up dependency on ZimbraServer -->
	<condition property="zimbraServer.dir" value="${env.ZIMBRASERVER_DIR}">
	    <isset property="env.ZIMBRASERVER_DIR" />
	</condition>	
	<condition property="zimbraServer.dir" value="../ZimbraServer">
	    <not><isset property="env.ZIMBRASERVER_DIR"/></not>
	</condition>
	<condition property="is-windows"><os family="windows"/></condition>
	<condition property="is-unix"><not><os family="windows"/></not></condition>

	<condition property="native.os" value="MacOSX"><os name="Mac OS X"/></condition>
	<condition property="native.os" value="Linux"><os name="Linux"/></condition>
	<condition property="native.so" value="jnilib"><os name="Mac OS X"/></condition>
	<condition property="native.so" value="so"><not><os name="Mac OS X"/></not></condition>
	
	<!-- src -->
	<property name="build.dir" location="build" />
	<property name="network.dir" location="../ZimbraNetwork/ZimbraServer" />
	<property name="network.classes.dir" location="${network.dir}/build/classes" />	
	<property name="bulkprovision.dir" location="ZimbraBulkProvision/" />

	<!-- build -->
	<property name="build.classes.dir" location="${build.dir}/classes" />
	<property name="build.zimlet.dir" location="${build.dir}/zimlets" />
	
	<!-- dist -->
	<property name="dist.dir" location="build/dist"/>
	<property name="dist.lib.dir" location="${dist.dir}/lib"/>
	<property name="dist.lib.ext.dir" location="${dist.lib.dir}/ext"/>
	<property name="zimlet.dist.dir" location="${dist.dir}/zimlets"/>
	

	<!-- deploy -->
	<property name="zimbra.home.dir" location="/opt/zimbra" />	

	<target name="build-init">
	   	<mkdir dir="${build.zimlet.dir}" /> 
		<mkdir dir="${build.classes.dir}" /> 
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${dist.lib.dir}"/>		
		<mkdir dir="${dist.lib.ext.dir}"/>			
		<mkdir dir="${zimlet.dist.dir}"/>
	</target>


	<property environment="env"/>

	<target name="clean" description="Removes any temporary files">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="dev-clean" depends='undeploy-zimlet' description="Removes any temporary files and undeploys the admin extension">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>
		
	<path id="class.path">
		<pathelement location="${client.classes.dir}" />
		<pathelement location="${common.classes.dir}" />
		<pathelement location="${network.classes.dir}" />		
		<pathelement location="${build.classes.dir}" />
		<pathelement location="${server.classes.dir}"/>
        <pathelement location="${soap.classes.dir}" />
		<fileset dir="${common.dir}/jars">
			<include name="**/*.jar"/>
		</fileset>
	
	</path>	

	<target name="package-zimlet" depends='build-init' description="put zimlet files into zip archive for deployment">
		<echo>Packing zimlet ${ext.name} to ${build.zimlet.dir}/${ext.name}.zip </echo>
        <mkdir dir="${build.zimlet.dir}" />
		<zip destfile="${build.zimlet.dir}/${ext.name}.zip" update="true">
			<fileset dir="${ext.dir}/js" includes="*"/>
		</zip>
	</target>
	
	<target name="undeploy-zimlet" description="undeploy zimlet">
		<echo>Undeploying zimlet: ${ext.name} </echo>
		<java classname="com.zimbra.cs.zimlet.ZimletUtil" fork="true" classpathref="class.path" failonerror="true">
			<arg line="undeploy ${ext.name}" />
		</java>
	</target>	
		
	<target name="deploy-zimlet" depends='package-zimlet' description="install UI files, deploy zimlet to LDAP">
		<echo>Deploying zimlet: ${ext.name}</echo>
		<mkdir dir="${build.zimlet.dir}" />
		<java classname="com.zimbra.cs.zimlet.ZimletUtil" fork="true" classpathref="class.path" failonerror="true">
			<arg line="-q" />
			<arg line="deploy" />
			<arg file="${build.zimlet.dir}/${ext.name}.zip" />
		</java>
	</target>

	<target name="jar" description="Creates the jar file">
            <ant dir="${ext.dir}" target="jar" inheritAll="false" />
            <copy tofile="${build.dir}/${ext.name}.jar" file="${ext.dir}/target/${ext.name}-${project.maven.version}.jar" />
	</target>

	<target name="deploy-server-extension" depends="jar">
		<ant dir="${zimbraServer.dir}" target="stop-webserver" inheritAll="false"/>
		<copy todir="${zimbra.home.dir}/lib/ext/${ext.name}">
			<fileset dir="${build.dir}" includes="${ext.name}.jar" />
		</copy>
		<ant dir="${zimbraServer.dir}" target="start-webserver" inheritAll="false"/>
	 </target>

    <target name="scp" description="Copy the zip file to the deploy machine">
		<echo message="Secure Copying the ${scp_src} to ${scp_dest}" />
		<exec executable="${scp}">
			<!-- remote port -->
			<arg value="-P" />
			<arg value="${remote_port}" />
			<arg value="-q" />
			<arg value="${scp_src}" />
			<arg value ="${scp_dest}" />
		</exec>
		<!-- PSCP on windows
		<exec executable="${scp}">
			<arg value="-q" />
		    <arg value="-i" />
			<arg value="${private_key}" />
			<arg value="${scp_src}" />
			<arg value ="${scp_dest}" />
		</exec>
		-->
	</target>

	    	
	<target name="copy-files-to-dev-machine" depends="package-zimlet" description="copy the files to the test/dev machine" >
		<!-- PSCP copy the file to the build -->
		<!-- Copy the jar file -->
		<antcall target="scp">
	    	<param name="scp_src" value="${build.dir}/${ext.name}.jar"/>
			<param name="scp_dest" value="root@${dev_machine}:/opt/zimbra/lib/ext/${ext.name}/${ext.name}.jar" />
	  	</antcall>

	  	<!-- Copy the zmrcd & zmcertmgr: may need to run dos2unix for zmrcd   -->
	  	<!--
	  	<antcall target="scp">
	    	<param name="scp_src" value="${zimbraServer.dir}/src/libexec/zmrcd"/>
			<param name="scp_dest" value="root@${dev_machine}:/opt/zimbra/libexec/zmrcd" />
	  	</antcall>
         -->
		<antcall target="scp">
	    	<param name="scp_src" value="${zimbraServer.dir}/src/bin/zmcertmgr"/>
			<param name="scp_dest" value="root@${dev_machine}:/opt/zimbra/bin/zmcertmgr" />
	  	</antcall>

          <!-- Copy the zimlet zip file -->
		<antcall target="scp">
	    	<param name="scp_src" value="${build.zimlet.dir}/${ext.name}.zip"/>
			<param name="scp_dest" value="zimbra@${dev_machine}:/opt/zimbra/zimlets-admin-extra" />
	  	</antcall>

	  	<!-- May need to copy the zimbraAdmin: generate the productioin zimbraAdmin.war - ant admin-war

	  	<antcall target="scp">
	    	<param name="scp_src" value="../ZimbraWebClient/build/dist/jetty/webapps/zimbraAdmin.war"/>
			<param name="scp_dest" value="zimbra@${dev_machine}:/opt/zimbra/jetty/webapps" />

	  	</antcall>
	  	-->
	</target>    	

    <target name="deploy-dev-cert" depends="package-zimlet, jar, copy-files-to-dev-machine" description="Deploy the extension"/>
    
	<!-- deploy the extension for development -->
    <target name="deploy" depends="deploy-zimlet, deploy-server-extension"
            description="Deploy the extension, must have ext.dir and ext.name property set"/>

	<target name="deploy-proxyconfig" description="deploy proxy configuration admin extension" >
		<antcall target="deploy-zimlet">
			<param name="ext.dir" value="ProxyConfig" />
			<param name="ext.name" value="com_zimbra_proxy_config" />
		</antcall>
	</target>
	
	<target name="deploy-certmgr" description="deploy certificate manager">
		<antcall target="deploy">
			<param name="ext.dir" value="CertificateMgr"/>
			<param name="ext.name" value="com_zimbra_cert_manager"/>
		</antcall>
	</target>

	<target name="deploy-helptooltip" description="deploy help tooltip admin extension">
		<antcall target="deploy-zimlet">
			<param name="ext.dir" value="HelpTooltip"/>
			<param name="ext.name" value="com_zimbra_tooltip"/>
		</antcall>
	</target>
	
	<target name="deploy-bulkprovision" description="deploy Bulk Provision">
	    <ant dir="${bulkprovision.dir}" target="deploy"/>
	</target>

	<target name="deploy-clientuploader">
		<antcall target="deploy">
			<param name="ext.dir" value="ClientUploader"/>
			<param name="ext.name" value="com_zimbra_clientuploader" />
		</antcall>
	</target>
	
	<target name="deploy-viewmail" description="deploy view mail extension">
		<antcall target="deploy-zimlet">
			<param name="ext.dir" value="com_zimbra_viewmail"/>
			<param name="ext.name" value="com_zimbra_viewmail"/>
		</antcall>
	</target>

	<target name="deploy-all" description="deploy all the admin extensions in ZimbraAdminExt">
		<antcall target="deploy-bulkprovision" />
		<antcall target="deploy-helptooltip" />
		<antcall target="deploy-certmgr" />
		<antcall target="deploy-proxyconfig" />
		<antcall target="deploy-clientuploader" />
		<antcall target="deploy-viewmail" />
	</target>

    <target name="package-clientuploader" description="package clientuploader extension">
        <antcall target="package-zimlet">
            <param name="ext.dir" value="ClientUploader"/>
            <param name="ext.name" value="com_zimbra_clientuploader" />
        </antcall>
        <antcall target="jar">
            <param name="ext.dir" value="ClientUploader"/>
            <param name="ext.name" value="com_zimbra_clientuploader" />
        </antcall>
    </target>
	
</project>
